[{"id":"2c3869c8.312596","type":"ibmiot out","z":"65ec860e.851e3","authentication":"boundService","apiKey":"","outputType":"evt","deviceId":"manuplant1","deviceType":"manuplant","eventCommandType":"update","format":"json","data":"all","qos":"","name":"Send to IBM IoT Platform","service":"registered","x":611,"y":161,"wires":[]},{"id":"c6997b2a.0c0c5","type":"inject","z":"65ec860e.851e3","name":"Send Data","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"x":141,"y":161,"wires":[["a524c1df.815ff8"]]},{"id":"a524c1df.815ff8","type":"function","z":"65ec860e.851e3","name":"Device payload","func":"// Array of pseudo random temperatures\nvar humidity1 = [15,17,15,17,15,17,15,17,18.5,20,21.5,33,44,52.2,21.5,15,17,15,17,15,17,15,17,18.5,20,21.5,33,44,52.2,21.5,33,44,52.2,33,44,52.2,89,98];\n// Array of pseudo random relative humidities\nvar temp1 = [20,21,21.5,20,29,28,29,31,29,32,28,34,20,21,21.5,20,29,28,29,31,29,32,28,34,20,21,21.5,20,29,28,29,31,29,32,28,34,50,55,49,45,47];\n//Array for Rotation Speed\nvar speed1 = [1000, 2200, 2200, 2200, 2200, 2200, 2200, 2200, 2300, 2300, 2300, 2300, 2300, 2300, 2400, 2400, 2400, 2400, 2400, 2400, 2400, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 2900, 3200, 4000, 2200, 3200, 4000, 5000, 3660, 3670, 3680, 3690, 4000];\n\n// Counter to select from array.\nvar counter1 = context.get('counter1')||0;\n/*\ncounter1 = counter1+1;\nif(counter1 > 9) counter1 = 0;\n*/\nidxHumidity = Math.floor(Math.random() * (humidity1.length - 1)+1);\nidxTemp = Math.floor(Math.random() * (temp1.length - 1)+1);\nidxSpeed = Math.floor(Math.random() * (speed1.length - 1)+1);\ncounter1 = Math.floor(Math.random() * (10-1)+1);\ncontext.set('counter1',counter1+1);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: JSON.stringify(\n    {\n      d: {\n        \"humidity\" : humidity1[idxHumidity],\n        \"temp\" : temp1[idxTemp],\n        \"speed\" : speed1[idxSpeed]\n         }\n      }\n  )\n};\n\n/*\nvar temperature = Math.floor(Math.random() * (200-1) + 1);\nvar humidity = Math.floor(Math.random() * (100-1) + 1);\nvar speed = Math.floor(Math.random() * (5000-1) + 1);\n\nvar holdTemp = context.get('holdTemp')||20;\nvar holdHumidity = context.get('holdHumidity')||20;\nvar holdSpeed = context.get('holdSpeed')||4000;\n\n// Randomize the Temperature\nif(holdTemp === 20){\n    holdTemp = temperature;\n} else if ((temperature >= (holdTemp * 0.85)) && (temperature <= (holdTemp * 1.15))) {\n    holdTemp = temperature;\n}\ncontext.set('holdTemp',holdTemp);\n\n// Randomize the Humidity\nif(holdHumidity === 20){\n    holdHumidity = humidity;\n} else if ((humidity >= (holdHumidity * 0.8)) && (humidity <= (holdHumidity * 1.2))) {\n    holdHumidity = humidity;\n}\ncontext.set('holdHumidity',holdHumidity);\n\n\n// Randomize the Humidity\nif(holdSpeed === 4000){\n    holdSpeed = speed;\n} else if ((humidity >= (speed * 0.7)) && (humidity <= (speed * 1.3))) {\n    holdSpeed = speed;\n}\ncontext.set('holdSpeed',holdSpeed);\n\n// Create MQTT message in JSON\nmsg = {\n  payload: JSON.stringify(\n    {\n        \"temperature\" : holdTemp,\n        \"humidity\" : holdHumidity,\n        \"speed\" : holdSpeed,\n    }\n  )\n};\n\n*/\nreturn msg;\n","outputs":1,"noerr":0,"x":361,"y":161,"wires":[["2c3869c8.312596","826bb082.98a52"]]},{"id":"826bb082.98a52","type":"debug","z":"65ec860e.851e3","name":"Debug output payload","active":true,"console":"false","complete":"payload","x":601,"y":221,"wires":[]},{"id":"edc77e48.617988","type":"comment","z":"65ec860e.851e3","name":"Device Simulator","info":"Sends simulated device sensor data to IBM Watson IoT Plaform.\n\nCan be configured to send on click or on an automatic interval.\n\n\n#Prerequisite\nOutput node device type and device ID need to match a device that it registered in a running IBM Watson IoT Platform service.\n\n# Watson IoT Platform docs\n[Connecting devices](https://www.bluemix.net/docs/services/IoT/iotplatform_task.html)","x":141,"y":81,"wires":[]},{"id":"2e1666d7.63ebd2","type":"comment","z":"65ec860e.851e3","name":"1. Configure target","info":"","x":591,"y":121,"wires":[]},{"id":"778c70f7.5c37c","type":"comment","z":"65ec860e.851e3","name":"2. Click to send data","info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n","x":151,"y":201,"wires":[]},{"id":"b3b96b46.bcc7e8","type":"ibmiot in","z":"65ec860e.851e3","authentication":"boundService","apiKey":"a77c8128.70eaf8","inputType":"evt","deviceId":"manuplant1","applicationId":"","deviceType":"+","eventType":"+","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":false,"allApplications":"","allDeviceTypes":true,"allEvents":true,"allCommands":"","allFormats":"","qos":"0","x":151,"y":460,"wires":[["b987981f.ce48f8","6f922131.ce0958","741767e1.93ef"]]},{"id":"b987981f.ce48f8","type":"function","z":"65ec860e.851e3","name":"Temp Payload","func":"return {payload:msg.payload.d.temp};","outputs":1,"noerr":0,"x":349,"y":553,"wires":[["5b869e8a.3930b","2ef2850c.206522"]]},{"id":"5b869e8a.3930b","type":"ui_gauge","z":"65ec860e.851e3","name":"Temp Gauge","group":"3abbc133.7128e6","order":1,"width":"0","height":"0","gtype":"gage","title":"Temp Level","label":"%C","format":"{{value}}","min":"0","max":"100","colors":["#00b500","#e6e600","#ca3838"],"x":645,"y":503,"wires":[]},{"id":"8e74e73d.283e08","type":"ui_gauge","z":"65ec860e.851e3","name":"Humidity Gauge","group":"a69b4a1c.82278","order":1,"width":"0","height":"0","gtype":"donut","title":"Humidity Level","label":"%","format":"{{value}}","min":"0","max":"100","colors":["#00b500","#e6e600","#ca3838"],"x":641,"y":299,"wires":[]},{"id":"6f922131.ce0958","type":"function","z":"65ec860e.851e3","name":"Humidity payload","func":"return {payload:msg.payload.d.humidity};","outputs":1,"noerr":0,"x":361,"y":378,"wires":[["8e74e73d.283e08","47374b14.d90fe4"]]},{"id":"47374b14.d90fe4","type":"ui_chart","z":"65ec860e.851e3","name":"Humidity Chart","group":"a69b4a1c.82278","order":1,"width":0,"height":0,"label":"Humidity Level","chartType":"line","legend":"false","xformat":"%H:%M:%S","interpolate":"linear","nodata":"","ymin":"0","ymax":"100","removeOlder":1,"removeOlderUnit":"60","x":647,"y":414,"wires":[[],[]]},{"id":"2ef2850c.206522","type":"ui_chart","z":"65ec860e.851e3","name":"Temp Chart","group":"3abbc133.7128e6","order":2,"width":0,"height":0,"label":"Temp Level","chartType":"line","legend":"false","xformat":"%H:%M:%S","interpolate":"linear","nodata":"","ymin":"20","ymax":"60","removeOlder":1,"removeOlderUnit":"60","x":640,"y":606,"wires":[[],[]]},{"id":"741767e1.93ef","type":"function","z":"65ec860e.851e3","name":"Speed Payload","func":"return {payload:msg.payload.d.speed};","outputs":1,"noerr":0,"x":361,"y":699,"wires":[["d07e5534.6559a8","4bd41c51.cc657c"]]},{"id":"d07e5534.6559a8","type":"ui_gauge","z":"65ec860e.851e3","name":"Speed Gauge","group":"82fccd66.6d151","order":0,"width":0,"height":0,"gtype":"wave","title":"Speed","label":"Kms","format":"{{value}}","min":"1000","max":"5000","colors":["#00b500","#e6e600","#ca3838"],"x":640,"y":673.5,"wires":[]},{"id":"4bd41c51.cc657c","type":"ui_chart","z":"65ec860e.851e3","name":"Speed Chart","group":"82fccd66.6d151","order":0,"width":0,"height":0,"label":"Speed","chartType":"line","legend":"false","xformat":"%H:%M:%S","interpolate":"linear","nodata":"","ymin":"1000","ymax":"5000","removeOlder":1,"removeOlderUnit":"60","x":623,"y":773.5,"wires":[[],[]]},{"id":"a77c8128.70eaf8","type":"ibmiot","z":"65ec860e.851e3","name":""},{"id":"3abbc133.7128e6","type":"ui_group","z":"","name":"Temp","tab":"47a131c1.7ae4b","order":2,"disp":true,"width":"8"},{"id":"a69b4a1c.82278","type":"ui_group","z":"","name":"Humidity","tab":"47a131c1.7ae4b","order":1,"disp":true,"width":"8"},{"id":"82fccd66.6d151","type":"ui_group","z":"","name":"Speed","tab":"47a131c1.7ae4b","order":3,"disp":true,"width":"8"},{"id":"47a131c1.7ae4b","type":"ui_tab","z":"65ec860e.851e3","name":"Connected Manufacturing Plant","icon":"dashboard","order":3}]
